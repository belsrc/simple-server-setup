
# Comments: use '#' for comment lines and ';' (following a space) for inline comments


[INCLUDES]

#before = paths-distro.conf
before = paths-debian.conf

# The DEFAULT allows a global definition of the options. They can be overridden
# in each jail afterwards.

[DEFAULT]

#
# MISCELLANEOUS OPTIONS
#

# "ignoreip" can be an IP address, a CIDR mask or a DNS host. Fail2ban will not
# ban a host which matches an address in this list. Several addresses can be
# defined using space separator.
ignoreip = 127.0.0.1/8 69.245.248.194

# External command that will take an tagged arguments to ignore, e.g. <ip>,
# and return true if the IP is to be ignored. False otherwise.
#
# ignorecommand = /path/to/command <ip>
ignorecommand =

# "bantime" is the number of seconds that a host is banned. Default 10min
bantime  = 600

# A host is banned if it has generated "maxretry" during the last "findtime"
# seconds.
findtime  = 600

# "maxretry" is the number of failures before a host get banned.
maxretry = 5

# "backend" specifies the backend used to get files modification.
# Available options are "pyinotify", "gamin", "polling", "systemd" and "auto".
# This option can be overridden in each jail as well.
#
# pyinotify: requires pyinotify (a file alteration monitor) to be installed.
#              If pyinotify is not installed, Fail2ban will use auto.
# gamin:     requires Gamin (a file alteration monitor) to be installed.
#              If Gamin is not installed, Fail2ban will use auto.
# polling:   uses a polling algorithm which does not require external libraries.
# systemd:   uses systemd python library to access the systemd journal.
#              Specifying "logpath" is not valid for this backend.
#              See "journalmatch" in the jails associated filter config
# auto:      will try to use the following backends, in order:
#              pyinotify, gamin, polling.
#
# Note: if systemd backend is choses as the default but you enable a jail
#       for which logs are present only in its own log files, specify some other
#       backend for that jail (e.g. polling) and provide empty value for
#       journalmatch. See https://github.com/fail2ban/fail2ban/issues/959#issuecomment-74901200
backend = auto

# "usedns" specifies if jails should trust hostnames in logs,
#   warn when DNS lookups are performed, or ignore all hostnames in logs
#
# yes:   if a hostname is encountered, a DNS lookup will be performed.
# warn:  if a hostname is encountered, a DNS lookup will be performed,
#        but it will be logged as a warning.
# no:    if a hostname is encountered, will not be used for banning,
#        but it will be logged as info.
usedns = warn

# "logencoding" specifies the encoding of the log files handled by the jail
#   This is used to decode the lines from the log file.
#   Typical examples:  "ascii", "utf-8"
#
#   auto:   will use the system locale setting
logencoding = auto

# "enabled" enables the jails.
#  By default all jails are disabled, and it should stay this way.
#  Enable only relevant to your setup jails in your .local or jail.d/*.conf
#
# true:  jail will be enabled and log files will get monitored for changes
# false: jail is not enabled
enabled = false


# "filter" defines the filter to use by the jail.
#  By default jails have names matching their filter name
#
filter = %(__name__)s


#
# ACTIONS
#

# Some options used for actions

# Destination email address used solely for the interpolations in
# jail.{conf,local,d/*} configuration files.
destemail = bryan@bryanckizer.com

# Sender email address used solely for some actions
sender = Fail2BanAlerts

# E-mail action. Since 0.8.1 Fail2Ban uses sendmail MTA for the
# mailing. Change mta configuration parameter to mail if you want to
# revert to conventional 'mail'.
mta = mail

# Default protocol
protocol = tcp

# Specify chain where jumps would need to be added in iptables-* actions
chain = INPUT

# Ports to be banned
# Usually should be overridden in a particular jail
port = 0:65535

#
# Action shortcuts. To be used to define action parameter

# Default banning action (e.g. iptables, iptables-new,
# iptables-multiport, shorewall, etc) It is used to define
# action_* variables. Can be overridden globally or per
# section within jail.local file
banaction = iptables-multiport

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
            %(mta)s-whois[name=%(__name__)s, dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report and relevant log lines
# to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             %(mta)s-whois-lines[name=%(__name__)s, dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]

# See the IMPORTANT note in action.d/xarf-login-attack for when to use this action
#
# ban & send a xarf e-mail to abuse contact of IP address and include relevant log lines
# to the destemail.
action_xarf = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             xarf-login-attack[service=%(__name__)s, sender="%(sender)s", logpath=%(logpath)s, port="%(port)s"]

# ban IP on CloudFlare & send an e-mail with whois report and relevant log lines
# to the destemail.
action_cf_mwl = cloudflare[cfuser="%(cfemail)s", cftoken="%(cfapikey)s"]
                %(mta)s-whois-lines[name=%(__name__)s, dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]

# Report block via blocklist.de fail2ban reporting service API
# 
# See the IMPORTANT note in action.d/blocklist_de.conf for when to
# use this action. Create a file jail.d/blocklist_de.local containing
# [Init]
# blocklist_de_apikey = {api key from registration]
#
action_blocklist_de  = blocklist_de[email="%(sender)s", service=%(filter)s, apikey="%(blocklist_de_apikey)s"]

# Report ban via badips.com, and use as blacklist
#
# See BadIPsAction docstring in config/action.d/badips.py for
# documentation for this action.
#
# NOTE: This action relies on banaction being present on start and therefore
# should be last action defined for a jail.
#
action_badips = badips.py[category="%(name)s", banaction="%(banaction)s"]

# Choose default action.  To change, just override value of 'action' with the
# interpolation to the chosen action shortcut (e.g.  action_mw, action_mwl, etc) in jail.local
# globally (section [DEFAULT]) or per specific section
action = %(action_mw)s


#
# JAILS
#

#
# SSH servers
#

[sshd]
enabled  = true
port     = ssh
filter   = sshd
logpath  = %(sshd_log)s
bantime  = 18000
maxretry = 3
findtime = 3600


[sshd-ddos]
enabled = true
port    = ssh
filter  = sshd-ddos
logpath = %(sshd_log)s


#
# HTTP servers
#


[nginx-http-auth]
enabled  = true
filter   = nginx-http-auth
action   = iptables-multiport[name=NoAuthFailures, port="http,https"]
logpath  = /var/log/nginx*/*error*.log
bantime  = 600 # 10 minutes
maxretry = 6

[nginx-botsearch]
enabled  = true
action   = iptables-multiport[name=BadSearch, port="http,https"]
logpath  = /var/log/nginx/*error*.log
maxretry = 2

[nginx-noscript]
enabled  = true
filter   = nginx-noscript
action   = iptables-multiport[name=NoScript, port="http,https"]
logpath  = /var/log/nginx/*access*.log
maxretry = 6

[nginx-badbots]
enabled  = true
port     = http,https
filter   = nginx-badbots
action   = iptables-multiport[name=BadBots, port="http,https"]
logpath  = /var/log/nginx/*access*.log
maxretry = 1

[nginx-noproxy]
enabled  = true
filter   = nginx-noproxy
action   = iptables-multiport[name=NoProxy, port="http,https"]
logpath  = /var/log/nginx/*access*.log
maxretry = 0

[nginx-dos]
enabled  = true
filter   = nginx-dos
action   = iptables-multiport[name=Ddos, port="http,https"]
logpath  = /var/log/nginx/*access*.log
findtime = 120
maxretry = 200
bantime  = 18000


#
# Mail servers
#


[sendmail-auth]
port    = submission,465,smtp
logpath = %(syslog_mail)s


[sendmail-reject]
port     = smtp,465,submission
logpath  = %(syslog_mail)s


#
#
# DNS servers
#

# IMPORTANT: see filter.d/named-refused for instructions to enable logging
# This jail blocks TCP traffic for DNS requests.

[named-refused]
port     = domain,953
logpath  = /var/log/named/security.log


#
# Miscellaneous
#


# To log wrong MySQL access attempts add to /etc/my.cnf in [mysqld] or
# equivalent section:
# log-warning = 2
#
# for syslog (daemon facility)
# [mysqld_safe]
# syslog
#
# for own logfile
# [mysqld]
# log-error=/var/log/mysqld.log

[mysqld-auth]
port     = 3306
logpath  = %(mysql_log)s
maxretry = 5


# Fail to ban loop, add incremental bans
[f2b-loop2]
enabled  = true
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 86400 ;1 day
findtime = 604800 ;1 week
logpath  = /var/log/fail2ban.log
maxretry = 2

[f2b-loop3]
enabled  = true
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 604800 ;1 week
findtime = 2592000 ;1 month
logpath  = /var/log/fail2ban.log
maxretry = 3

[f2b-loop4]
enabled  = false
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 2592000 ;1 month
findtime = 15552000 ;6 months
logpath  = /var/log/fail2ban.log
maxretry = 6

[f2b-loop5]
enabled  = false
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 15552000 ;6 months
findtime = 31536000 ;1 year
logpath  = /var/log/fail2ban.log
maxretry = 9
