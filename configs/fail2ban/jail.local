
# Comments: use '#' for comment lines and ';' (following a space) for inline comments


[INCLUDES]

#before = paths-distro.conf
before = paths-debian.conf


[DEFAULT]


#
# MISCELLANEOUS OPTIONS
#

ignoreip = 127.0.0.1/8 69.245.248.194

ignorecommand =

bantime  = 600  ; 10 minutes

findtime  = 600  ; 10 minutes

maxretry = 5

backend = auto

usedns = warn

logencoding = auto

enabled = false

filter = %(__name__)s


#
# ACTIONS
#


destemail = bryan@bryanckizer.com

sender = Fail2BanAlerts

mta = mail

protocol = tcp

chain = INPUT

port = 0:65535

banaction = iptables-multiport

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
            %(mta)s-whois[name=%(__name__)s, dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report and relevant log lines
# to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             %(mta)s-whois-lines[name=%(__name__)s, dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]

# See the IMPORTANT note in action.d/xarf-login-attack for when to use this action
#
# ban & send a xarf e-mail to abuse contact of IP address and include relevant log lines
# to the destemail.
action_xarf = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             xarf-login-attack[service=%(__name__)s, sender="%(sender)s", logpath=%(logpath)s, port="%(port)s"]

# ban IP on CloudFlare & send an e-mail with whois report and relevant log lines
# to the destemail.
action_cf_mwl = cloudflare[cfuser="%(cfemail)s", cftoken="%(cfapikey)s"]
                %(mta)s-whois-lines[name=%(__name__)s, dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]

# Report block via blocklist.de fail2ban reporting service API
#
# See the IMPORTANT note in action.d/blocklist_de.conf for when to
# use this action. Create a file jail.d/blocklist_de.local containing
# [Init]
# blocklist_de_apikey = {api key from registration]
#
action_blocklist_de  = blocklist_de[email="%(sender)s", service=%(filter)s, apikey="%(blocklist_de_apikey)s"]

# Report ban via badips.com, and use as blacklist
#
# See BadIPsAction docstring in config/action.d/badips.py for
# documentation for this action.
#
# NOTE: This action relies on banaction being present on start and therefore
# should be last action defined for a jail.
#
action_badips = badips.py[category="%(name)s", banaction="%(banaction)s"]

# Choose default action.  To change, just override value of 'action' with the
# interpolation to the chosen action shortcut (e.g.  action_mw, action_mwl, etc) in jail.local
# globally (section [DEFAULT]) or per specific section
action = %(action_mw)s


#
# JAILS
#

#
# SSH servers
#

# The value in the [] works as both the filter to use and the name of the jail
# You can set them differently by using the "filter=" and "action" tags but
# this way seems the cleanest

# Since password log ins are always turned off I don't feel bad setting these strict.
[sshd]
enabled  = true
port     = ssh
logpath  = %(sshd_log)s
bantime  = 86400  ; 1 day
maxretry = 0
findtime = 3600  ; 1 hour


[sshd-ddos]
enabled = true
port    = ssh
logpath = %(sshd_log)s


#
# HTTP servers
#


[nginx-http-auth]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/error.log
bantime  = 600  ; 10 minutes
maxretry = 5

[nginx-botsearch]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/error.log
bantime  = 86400  ; 1 day
maxretry = 1

[nginx-noscript]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/access.log
bantime  = 86400  ; 1 day
maxretry = 5

[nginx-badbots]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/access.log
bantime  = 86400  ; 1 day
maxretry = 1

[nginx-noproxy]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/access.log
bantime  = 86400  ; 1 day
maxretry = 0

[nginx-dos]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/access.log
bantime  = 86400  ; 1 day
findtime = 120  ; Short find time
maxretry = 200  ; For a lot of requests


#
# Mail servers
#


[sendmail-auth]
port    = submission,465,smtp
logpath = %(syslog_mail)s


[sendmail-reject]
port     = smtp,465,submission
logpath  = %(syslog_mail)s


#
#
# DNS servers
#

# IMPORTANT: see filter.d/named-refused for instructions to enable logging
# This jail blocks TCP traffic for DNS requests.

[named-refused]
port     = domain,953
logpath  = /var/log/named/security.log


#
# Miscellaneous
#


# To log wrong MySQL access attempts add to /etc/my.cnf in [mysqld] or
# equivalent section:
# log-warning = 2
#
# for syslog (daemon facility)
# [mysqld_safe]
# syslog
#
# for own logfile
# [mysqld]
# log-error=/var/log/mysqld.log

[mysqld-auth]
port     = 3306
logpath  = %(mysql_log)s
maxretry = 5


#
# Fail to ban loop, add incremental bans
#


[f2b-loop2]
enabled  = true
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 86400  ; 1 day
findtime = 604800  ; 1 week
logpath  = /var/log/fail2ban.log
maxretry = 2

[f2b-loop3]
enabled  = true
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 604800  ; 1 week
findtime = 2592000  ; 1 month
logpath  = /var/log/fail2ban.log
maxretry = 3

[f2b-loop4]
enabled  = false
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 2592000  ; 1 month
findtime = 15552000  ; 6 months
logpath  = /var/log/fail2ban.log
maxretry = 6

[f2b-loop5]
enabled  = false
filter   = f2b-loop
action   = iptables-allports[name=fail2ban]
bantime  = 15552000  ; 6 months
findtime = 31536000  ; 1 year
logpath  = /var/log/fail2ban.log
maxretry = 9
